#user  nobody;
worker_processes  5;
#pid        logs/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  upstream myapp {
    server unix:///myapp/tmp/puma.sock;
  }

  sendfile        on;
  keepalive_timeout  1800;
  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=static:1000m inactive=30m max_size=1000m;

  server {
    listen 80;
    server_name myapp.test.com;
    charset utf-8;

    root /myapp/public;

    client_max_body_size 1000m;
    error_page 500 502 503 504 /500.html;

    try_files $uri/index.html $uri @myapp;

    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 100 8k;
    proxy_connect_timeout 300;
    proxy_read_timeout 300;
    proxy_send_timeout 300;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;

    location / {

      if ( $request_method = OPTIONS ) {     
        add_header 'Access-Control-Allow-Origin' "*";
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        return 204;
      }
      try_files $uri/index.html $uri @myapp;
    }
    location ~ ".(ttf|woff|jpg|jpeg|gif|gz|zip|flv|rar|wmv|avi|swf|png|htc|ico|mpeg|mpg|txt|mp3|mov)(\?v=[0-9.]+)?$" {
      access_log off;
      proxy_connect_timeout 10;
      proxy_read_timeout 10;
      proxy_send_timeout 10;

      proxy_redirect off;
      proxy_pass_header Cookie;
      proxy_ignore_headers Set-Cookie;
      proxy_hide_header Set-Cookie;
      proxy_cache static;
      add_header Cache-Control public;

      expires 1h;
      proxy_cache_valid 200 302 120m;
      proxy_pass http://myapp;
    }

    location @myapp {
      proxy_pass http://myapp;
    }
  }
}
